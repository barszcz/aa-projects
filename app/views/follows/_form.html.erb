<!-- <% if current_user.follows?(user) %>
  <%= button_to "Unfollow", user_follow_url(user), method: :delete %>
<% else %>
  <%= button_to "Follow", user_follow_url(user), method: :post %>
<% end %> -->
<% follow_state = current_user.follows?(user) ? "followed" : "unfollowed" %>
<button class="follow-toggle" name="button"
  data-user-id="<%= user.id %>"
  data-initial-follow-state="<%= follow_state %>">
</button>

<script>
  var FollowToggle = $.FollowToggle = function (el) {
    this.$el = $(el);
    this.userId = this.$el.data("user-id");
    this.followState = this.$el.data("initial-follow-state");
    this.render(this.followState === "followed" ? "Unfollow!" : "Follow!");
    this.$el.on("click", this.handleClick.bind(this));
  };

  $.FollowToggle.prototype.render = function (buttonText) {
    this.$el.html(buttonText);
  };

  FollowToggle.prototype.handleClick = function (event) {
    event.preventDefault();

    var method, intermediateText, nextText, nextState;
    var toggle = this;

    if (this.followState === "followed") {
      method = "DELETE";
      intermediateText = "Unfollowing...";
      nextState = "unfollowed";
      nextText = "Follow!";
    } else {
      method = "POST";
      intermediateText = "Following...";
      nextState = "followed";
      nextText = "Unfollow!"
    }

    this.render(intermediateText);
    this.$el.prop("disabled", true);

    $.ajax({
      url: "/users/" + this.userId + "/follow",
      type: method,
      dataType: "json",
      success: function (data) {
        toggle.followState = nextState;
        toggle.render(nextText);
        toggle.$el.prop("disabled", false);
      }
    });



  }

  $.fn.followToggle = function () {
    return this.each(function () {
      new $.FollowToggle(this);
    });
  }


  $(function () {
    $("button.follow-toggle").followToggle();
  });
</script>
